diff --git a/official/vision/image_classification/augment.py b/official/vision/image_classification/augment.py
index f322d31da..294fcd543 100644
--- a/official/vision/image_classification/augment.py
+++ b/official/vision/image_classification/augment.py
@@ -25,7 +25,10 @@ from __future__ import print_function
 import math
 from typing import Any, Dict, List, Optional, Text, Tuple
 
-from keras.layers.preprocessing import image_preprocessing as image_ops
+try:
+    from keras.src.layers.preprocessing import image_preprocessing as image_ops
+except ImportError:
+    from keras.layers.preprocessing import image_preprocessing as image_ops
 import tensorflow as tf
 
 
diff --git a/official/vision/image_classification/classifier_trainer.py b/official/vision/image_classification/classifier_trainer.py
index ab6fbaea9..0347bc8c9 100644
--- a/official/vision/image_classification/classifier_trainer.py
+++ b/official/vision/image_classification/classifier_trainer.py
@@ -283,6 +283,14 @@ def serialize_config(params: base_configs.ExperimentConfig, model_dir: str):
   hyperparams.save_params_dict_to_yaml(params, params_save_path)
 
 
+class dummy_context:
+  def __init__(self):
+    pass
+  def __enter__(self):
+    pass
+  def __exit__(self, exc_type, exc_value, traceback):
+    pass
+
 def train_and_eval(
     params: base_configs.ExperimentConfig,
     strategy_override: tf.distribute.Strategy) -> Mapping[str, Any]:
@@ -323,6 +331,7 @@ def train_and_eval(
   initialize(params, train_builder)
 
   logging.info('Global batch size: %d', train_builder.global_batch_size)
+  strategy_scope = dummy_context()
 
   with strategy_scope:
     model_params = params.model.model_params.as_dict()
